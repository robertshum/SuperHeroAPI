// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SuperHeroAPI.Data;

#nullable disable

namespace SuperHeroAPI.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20240419011448_SimplePowerAndHeroRel")]
    partial class SimplePowerAndHeroRel
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("PowerSuperHero", b =>
                {
                    b.Property<int>("SuperHeroesId")
                        .HasColumnType("int");

                    b.Property<int>("SuperHeroesId1")
                        .HasColumnType("int");

                    b.HasKey("SuperHeroesId", "SuperHeroesId1");

                    b.HasIndex("SuperHeroesId1");

                    b.ToTable("PowerSuperHero");
                });

            modelBuilder.Entity("SuperHeroAPI.Power", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Tag")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Powers");
                });

            modelBuilder.Entity("SuperHeroAPI.SuperHero", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Place")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("SuperHeroes");
                });

            modelBuilder.Entity("SuperHeroAPI.SuperHeroPower", b =>
                {
                    b.Property<int>("SuperHeroId")
                        .HasColumnType("int");

                    b.Property<int>("PowerId")
                        .HasColumnType("int");

                    b.HasKey("SuperHeroId", "PowerId");

                    b.HasIndex("PowerId");

                    b.ToTable("SuperHeroPowers");
                });

            modelBuilder.Entity("PowerSuperHero", b =>
                {
                    b.HasOne("SuperHeroAPI.Power", null)
                        .WithMany()
                        .HasForeignKey("SuperHeroesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SuperHeroAPI.SuperHero", null)
                        .WithMany()
                        .HasForeignKey("SuperHeroesId1")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SuperHeroAPI.SuperHeroPower", b =>
                {
                    b.HasOne("SuperHeroAPI.Power", "Power")
                        .WithMany("SuperHeroPowers")
                        .HasForeignKey("PowerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SuperHeroAPI.SuperHero", "SuperHero")
                        .WithMany("SuperHeroPowers")
                        .HasForeignKey("SuperHeroId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Power");

                    b.Navigation("SuperHero");
                });

            modelBuilder.Entity("SuperHeroAPI.Power", b =>
                {
                    b.Navigation("SuperHeroPowers");
                });

            modelBuilder.Entity("SuperHeroAPI.SuperHero", b =>
                {
                    b.Navigation("SuperHeroPowers");
                });
#pragma warning restore 612, 618
        }
    }
}
